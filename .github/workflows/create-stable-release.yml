name: Create Stable Release

on:
  workflow_dispatch:
    inputs:
      level:
        description: 'Version increment level'
        required: false
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'patch'
      exact_version:
        description: 'Exact version (optional, overrides level)'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install release-it and plugins
        run: |
          npm install -g release-it@latest
          npm install -g @release-it/keep-a-changelog@latest

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Validate branch
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          if [[ "$BRANCH_NAME" != "main" ]]; then
            echo "Error: Stable releases can only be created from main branch"
            exit 1
          fi

      - name: Run release-it
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ -n "${{ inputs.exact_version }}" ]]; then
            VERSION="${{ inputs.exact_version }}"
            # Validate version format
            if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "Error: Invalid version format. Expected: X.Y.Z"
              exit 1
            fi
            release-it --new-version="$VERSION" --ci
          else
            release-it ${{ inputs.level }} --ci
          fi

      - name: Display release information
        run: |
          echo "‚úÖ Stable release completed successfully!"
          echo "Branch: ${{ github.ref_name }}"
          echo "Type: stable"
          if [[ -n "${{ inputs.exact_version }}" ]]; then
            echo "Exact Version: ${{ inputs.exact_version }}"
          else
            echo "Level: ${{ inputs.level }}"
          fi
          echo ""
          echo "üîó Check the release: https://github.com/${{ github.repository }}/releases"
          echo "üè∑Ô∏è View tags: https://github.com/${{ github.repository }}/tags"