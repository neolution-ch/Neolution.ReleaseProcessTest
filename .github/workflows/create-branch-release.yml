name: Create Branch Release

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Release type'
        required: true
        type: choice
        options:
          - stable
          - rc
          - beta
          - alpha
        default: 'stable'

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install release-it and plugins
        run: |
          npm install -g release-it@latest
          npm install -g @release-it/keep-a-changelog@latest

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Validate inputs for branch type
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          echo "Current branch: $BRANCH_NAME"

          if [[ "$BRANCH_NAME" == release/* ]]; then
            echo "BRANCH_TYPE=release" >> $GITHUB_ENV
            echo "Running stabilization release from release branch"
          elif [[ "$BRANCH_NAME" == hotfix/* ]]; then
            echo "BRANCH_TYPE=hotfix" >> $GITHUB_ENV
            echo "Running hotfix release from hotfix branch"
          else
            echo "Error: Branch releases can only be created from release/* or hotfix/* branches"
            exit 1
          fi

      - name: Parse version from branch name
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          if [[ "$BRANCH_NAME" == release/* ]]; then
            BASE_VERSION=${BRANCH_NAME#release/v}
          elif [[ "$BRANCH_NAME" == hotfix/* ]]; then
            BASE_VERSION=${BRANCH_NAME#hotfix/v}
          fi
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_ENV


      - name: Run release-it
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ inputs.type }}" == "stable" ]]; then
            VERSION="$BASE_VERSION"
          else
            if [[ "$BASE_VERSION" == *"-${{ inputs.type }}."* ]]; then
              VERSION="$BASE_VERSION"
            else
              VERSION="$BASE_VERSION-${{ inputs.type }}.0"
            fi
          fi

          # Validate version format
          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+(\.[0-9]+)?)?$ ]]; then
            echo "Error: Invalid version format. Expected: X.Y.Z or X.Y.Z-prerelease"
            exit 1
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV

          if [[ "${{ inputs.type }}" == "stable" ]]; then
            # Stable release - update changelog and commit
            release-it --new-version="$VERSION" \
              --ci
          else
            # Pre-release - don't commit, mark as pre-release, don't update changelog
            release-it --new-version="$VERSION" --preRelease=${{ inputs.type }} \
              --no-git.commit \
              --github.preRelease \
              --plugins.@release-it/keep-a-changelog.addUnreleased=false \
              --ci
          fi

      - name: Display release information
        run: |
          echo "‚úÖ Branch release completed successfully!"
          echo "Branch: ${{ github.ref_name }}"
          echo "Branch Type: ${{ env.BRANCH_TYPE }}"
          echo "Release Type: ${{ inputs.type }}"
          echo "Version: ${{ env.VERSION }}"
          echo ""
          echo "üîó Check the release: https://github.com/${{ github.repository }}/releases"
          echo "üè∑Ô∏è View tags: https://github.com/${{ github.repository }}/tags"